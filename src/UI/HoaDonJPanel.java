/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import DuAnDAO.*;
import Entity.*;
import Helper.DateHelper;
import Helper.DialogHelper;
import Helper.ShareHelper;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.CardLayout;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class HoaDonJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HoaDonJPanel
     */
    public HoaDonJPanel() {
        initComponents();

        this.init();
        if (ShareHelper.isLogin1()) {
            btnThemHD.setVisible(false);
            btnXoaHD.setVisible(false);
            btnNewHD.setVisible(false);
        } else {
            btnThemHD.setVisible(true);
            btnXoaHD.setVisible(true);
            btnNewHD.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        btnUndo = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnXuatHD = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        btnNewHD = new javax.swing.JButton();
        btnXoaHD = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel53 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jLabel56 = new javax.swing.JLabel();
        cboTenBN = new javax.swing.JComboBox();
        btnThemHD = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        txtSoThangTT = new javax.swing.JTextField();
        lblMaPhong = new javax.swing.JLabel();
        txtNgayThanhToan = new com.toedter.calendar.JDateChooser();
        lblSoThangCanTT = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        lblNgayBatDau = new javax.swing.JLabel();
        lblNgayKetThuc = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        btnXemChiTiet = new javax.swing.JButton();
        lblMenuRedo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        tblDichVuCT = new javax.swing.JTable();
        jLabel61 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        lblTenBN = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        lblNgayBatDau2 = new javax.swing.JLabel();
        lblNgayKetThuc2 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        lblTongTien2 = new javax.swing.JLabel();
        btnQuayLai = new javax.swing.JButton();
        lblMaPhong2 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        lblGiaPhong = new javax.swing.JLabel();
        lblTitle1 = new javax.swing.JLabel();
        lblSoThangTT = new javax.swing.JLabel();
        btnExcel1 = new javax.swing.JButton();
        lbltten = new javax.swing.JLabel();

        btnUndo.setText("Undo");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(btnUndo);

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1400, 875));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 153, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("QUẢN LÝ HÓA ĐƠN");

        btnXuatHD.setBackground(new java.awt.Color(255, 255, 255));
        btnXuatHD.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnXuatHD.setText("XUẤT BILL");
        btnXuatHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXuatHD.setContentAreaFilled(false);
        btnXuatHD.setOpaque(true);

        jLabel54.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_calendar_8_35px.png"))); // NOI18N
        jLabel54.setText("Ngày thanh toán");

        btnNewHD.setBackground(new java.awt.Color(255, 255, 255));
        btnNewHD.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnNewHD.setText("MỚI");
        btnNewHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNewHD.setContentAreaFilled(false);
        btnNewHD.setOpaque(true);
        btnNewHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewHDActionPerformed(evt);
            }
        });

        btnXoaHD.setBackground(new java.awt.Color(255, 255, 255));
        btnXoaHD.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnXoaHD.setText("XÓA");
        btnXoaHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXoaHD.setContentAreaFilled(false);
        btnXoaHD.setOpaque(true);
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });

        jLabel53.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel53.setText("Mã phòng");

        jLabel55.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel55.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_bank_35px.png"))); // NOI18N
        jLabel55.setText("Số tháng cần TT");

        tblHoaDon.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"01", "01", "001", "6", "12000000", null, null},
                {"02", "02", "002", "9", "1500000", null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên bệnh nhân", "Ngày thanh toán", "Số tháng thanh toán", "Ngày bắt đầu", "Ngày kết thúc", "Tổng tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.setFocusable(false);
        tblHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        tblHoaDon.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblHoaDon.setRowHeight(30);
        tblHoaDon.setSelectionBackground(new java.awt.Color(245, 165, 165));
        tblHoaDon.setShowVerticalLines(false);
        tblHoaDon.getTableHeader().setReorderingAllowed(false);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(4).setHeaderValue("Ngày bắt đầu");
            tblHoaDon.getColumnModel().getColumn(5).setHeaderValue("Ngày kết thúc");
            tblHoaDon.getColumnModel().getColumn(6).setHeaderValue("Tổng tiền");
        }

        jLabel56.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_Numbers_35px.png"))); // NOI18N
        jLabel56.setText("Số tháng TT");

        cboTenBN.setEditable(true);
        cboTenBN.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        cboTenBN.setFocusable(false);
        cboTenBN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenBNActionPerformed(evt);
            }
        });

        btnThemHD.setBackground(new java.awt.Color(255, 255, 255));
        btnThemHD.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnThemHD.setText("THÊM");
        btnThemHD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnThemHD.setContentAreaFilled(false);
        btnThemHD.setOpaque(true);
        btnThemHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemHDActionPerformed(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel49.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_orcid_35px.png"))); // NOI18N
        jLabel49.setText("Tên bệnh nhân");

        txtSoThangTT.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        txtSoThangTT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoThangTTKeyReleased(evt);
            }
        });

        lblMaPhong.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblMaPhong.setText("R903");

        txtNgayThanhToan.setBackground(new java.awt.Color(255, 255, 255));
        txtNgayThanhToan.setDateFormatString("dd/MM/yyyy");

        lblSoThangCanTT.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblSoThangCanTT.setText("R903");

        jLabel59.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel59.setText("Ngày bắt đầu");

        lblNgayBatDau.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblNgayBatDau.setText("12/01/2001");

        lblNgayKetThuc.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblNgayKetThuc.setText("12/01/2001");

        jLabel62.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel62.setText("Ngày bắt đầu");

        jLabel63.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel63.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_money_35px.png"))); // NOI18N
        jLabel63.setText("Tổng tiền");

        lblTongTien.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblTongTien.setText("999999");

        btnXemChiTiet.setBackground(new java.awt.Color(255, 255, 255));
        btnXemChiTiet.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnXemChiTiet.setText("Xem chi tiết");
        btnXemChiTiet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnXemChiTiet.setContentAreaFilled(false);
        btnXemChiTiet.setOpaque(true);
        btnXemChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemChiTietActionPerformed(evt);
            }
        });

        lblMenuRedo.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        lblMenuRedo.setText("...");
        lblMenuRedo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMenuRedoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMenuRedo)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel59)
                                    .addComponent(jLabel63))
                                .addGap(41, 41, 41))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel49)
                                .addGap(33, 33, 33)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboTenBN, 0, 428, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXemChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNgayThanhToan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaPhong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSoThangCanTT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                                .addComponent(jLabel62)
                                .addGap(41, 41, 41)
                                .addComponent(lblNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnNewHD, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnXuatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel53)
                                .addComponent(jLabel54)
                                .addComponent(jLabel55)
                                .addComponent(jLabel56))
                            .addGap(15, 15, 15)
                            .addComponent(txtSoThangTT, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(1036, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(lblMenuRedo)
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel49)
                            .addComponent(cboTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(lblMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(txtNgayThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(lblSoThangCanTT, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel59)
                            .addComponent(lblNgayBatDau)
                            .addComponent(jLabel62)
                            .addComponent(lblNgayKetThuc))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(lblTongTien)
                            .addComponent(btnXemChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(347, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXuatHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThemHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNewHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(205, 205, 205)
                    .addComponent(jLabel53)
                    .addGap(25, 25, 25)
                    .addComponent(jLabel54)
                    .addGap(25, 25, 25)
                    .addComponent(jLabel55)
                    .addGap(25, 25, 25)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel56)
                        .addComponent(txtSoThangTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(30, 30, 30)))
        );

        jPanel1.add(jPanel2, "card2");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel58.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel58.setText("Mã phòng");

        tblDichVuCT.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        tblDichVuCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"01", "01", "001", "6"},
                {"02", "02", "002", "9"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã dịch vụ", "Tên dịch vụ", "Ngày đăng kí", "Tiền dịch vụ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDichVuCT.setFocusable(false);
        tblDichVuCT.setGridColor(new java.awt.Color(255, 255, 255));
        tblDichVuCT.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDichVuCT.setRowHeight(30);
        tblDichVuCT.setSelectionBackground(new java.awt.Color(245, 165, 165));
        tblDichVuCT.setShowVerticalLines(false);
        tblDichVuCT.getTableHeader().setReorderingAllowed(false);
        tblDichVuCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDichVuCTMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tblDichVuCT);

        jLabel61.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_Numbers_35px.png"))); // NOI18N
        jLabel61.setText("Số tháng TT");

        jLabel50.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_orcid_35px.png"))); // NOI18N
        jLabel50.setText("Tên bệnh nhân");

        lblTenBN.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblTenBN.setText("NULL");

        jLabel64.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel64.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel64.setText("Ngày bắt đầu");

        lblNgayBatDau2.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblNgayBatDau2.setText("NULL");

        lblNgayKetThuc2.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblNgayKetThuc2.setText("NULL");

        jLabel65.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel65.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel65.setText("Ngày bắt đầu");

        jLabel66.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel66.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_money_35px.png"))); // NOI18N
        jLabel66.setText("Tổng tiền");

        lblTongTien2.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblTongTien2.setText("0.0");

        btnQuayLai.setBackground(new java.awt.Color(255, 255, 255));
        btnQuayLai.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnQuayLai.setText("Quay lại hóa đơn");
        btnQuayLai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnQuayLai.setContentAreaFilled(false);
        btnQuayLai.setOpaque(true);
        btnQuayLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuayLaiActionPerformed(evt);
            }
        });

        lblMaPhong2.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblMaPhong2.setText("R000");

        jLabel67.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        jLabel67.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8_binary_file_35px.png"))); // NOI18N
        jLabel67.setText("Giá phòng");

        lblGiaPhong.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblGiaPhong.setText("0.0");

        lblTitle1.setBackground(new java.awt.Color(255, 255, 255));
        lblTitle1.setFont(new java.awt.Font("Monospaced", 1, 36)); // NOI18N
        lblTitle1.setForeground(new java.awt.Color(255, 153, 153));
        lblTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle1.setText("HÓA ĐƠN CHI TIẾT");

        lblSoThangTT.setFont(new java.awt.Font("Monospaced", 0, 13)); // NOI18N
        lblSoThangTT.setText("0");

        btnExcel1.setBackground(new java.awt.Color(255, 255, 255));
        btnExcel1.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        btnExcel1.setText("Xuất hóa đơn");
        btnExcel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnExcel1.setContentAreaFilled(false);
        btnExcel1.setOpaque(true);
        btnExcel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcel1ActionPerformed(evt);
            }
        });

        lbltten.setText("jLabel1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel64)
                                        .addComponent(jLabel66))
                                    .addGap(41, 41, 41)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblNgayBatDau2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(lblTongTien2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel61)
                                        .addComponent(jLabel58))
                                    .addGap(49, 49, 49)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(lblMaPhong2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(76, 76, 76)
                                            .addComponent(jLabel67)
                                            .addGap(37, 37, 37)
                                            .addComponent(lblGiaPhong))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                            .addComponent(jLabel65)
                                            .addGap(30, 30, 30)
                                            .addComponent(lblNgayKetThuc2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblSoThangTT, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(jLabel50)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTenBN, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnExcel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lbltten)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(1036, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblTitle1)
                .addGap(100, 100, 100)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel50)
                            .addComponent(lblTenBN))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaPhong2)
                            .addComponent(jLabel67)
                            .addComponent(lblGiaPhong)
                            .addComponent(jLabel58))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel61)
                            .addComponent(lblSoThangTT))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel64)
                            .addComponent(lblNgayBatDau2)
                            .addComponent(jLabel65)
                            .addComponent(lblNgayKetThuc2))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(lblTongTien2)
                            .addComponent(btnQuayLai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnExcel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(lbltten))
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 656, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                    .addContainerGap(746, Short.MAX_VALUE)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(115, 115, 115)))
        );

        jPanel1.add(jPanel4, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1657, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnXemChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemChiTietActionPerformed
        if (txtSoThangTT.getText().isEmpty()) {
            DialogHelper.alert(this, "Bạn chưa nhập số tháng thanh toán");
        } else if (isInvalidSoTTT()) {
            this.viewDichVuCT();
            this.setFormDVCT();
            this.fillTableDVCT();
        }
    }//GEN-LAST:event_btnXemChiTietActionPerformed

    private void cboTenBNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenBNActionPerformed
        this.SelectBenhNhan();
    }//GEN-LAST:event_cboTenBNActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblHoaDon.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void btnNewHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewHDActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnNewHDActionPerformed

    private void btnThemHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemHDActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThemHDActionPerformed

    private void txtSoThangTTKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoThangTTKeyReleased
        if (isInvalidSoTTT()) {
            if (Integer.parseInt(txtSoThangTT.getText()) <= Integer.parseInt(lblSoThangCanTT.getText())) {
                this.fillNgayBD();
                this.fillNgayKT();
                this.fillTongTien();

            } else {
                DialogHelper.alert(this, "Số tháng thanh toán không được lớn hơn số tháng cần thanh toán");
                txtSoThangTT.setText("");

            }

        }
    }//GEN-LAST:event_txtSoThangTTKeyReleased

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaHDActionPerformed

    private void tblDichVuCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDichVuCTMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDichVuCTMouseClicked

    private void btnQuayLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuayLaiActionPerformed
        this.viewDichVuCT();
    }//GEN-LAST:event_btnQuayLaiActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        this.undo();
        this.fillThangCanTT();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void lblMenuRedoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMenuRedoMouseClicked
        this.showMenuRedo();
    }//GEN-LAST:event_lblMenuRedoMouseClicked

    private void btnExcel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcel1ActionPerformed
        // TODO add your handling code here:
        exportpdf();
    }//GEN-LAST:event_btnExcel1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcel1;
    private javax.swing.JButton btnNewHD;
    private javax.swing.JButton btnQuayLai;
    private javax.swing.JButton btnThemHD;
    private javax.swing.JMenuItem btnUndo;
    private javax.swing.JButton btnXemChiTiet;
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JButton btnXuatHD;
    private javax.swing.JComboBox cboTenBN;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lblGiaPhong;
    private javax.swing.JLabel lblMaPhong;
    private javax.swing.JLabel lblMaPhong2;
    private javax.swing.JLabel lblMenuRedo;
    private javax.swing.JLabel lblNgayBatDau;
    private javax.swing.JLabel lblNgayBatDau2;
    private javax.swing.JLabel lblNgayKetThuc;
    private javax.swing.JLabel lblNgayKetThuc2;
    private javax.swing.JLabel lblSoThangCanTT;
    private javax.swing.JLabel lblSoThangTT;
    private javax.swing.JLabel lblTenBN;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTitle1;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTien2;
    private javax.swing.JLabel lbltten;
    private javax.swing.JTable tblDichVuCT;
    private javax.swing.JTable tblHoaDon;
    private com.toedter.calendar.JDateChooser txtNgayThanhToan;
    private javax.swing.JTextField txtSoThangTT;
    // End of variables declaration//GEN-END:variables

    List<HoaDon> listUndo = new ArrayList<>();
    List<Integer> listBrowser = new ArrayList<>();
    int index = -1;

    int row = -1;
    HoaDonDAO hoaDonDAO = new HoaDonDAO();
    BenhNhanDAO benhNhanDAO = new BenhNhanDAO();
    DichVuDAO dichVuDAO = new DichVuDAO();
    PhongDAO phongDAO = new PhongDAO();
    DichVuCTDAO dvctDAO = new DichVuCTDAO();

    public void init() {
        this.fillComboxTenBN();
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon.getModel();
        model.setRowCount(0);
        BenhNhan benhNhan = (BenhNhan) cboTenBN.getSelectedItem();
        List<HoaDon> list;
        if (ShareHelper.isLogin()) {
            try {
                list = hoaDonDAO.selectByMaBN(benhNhan.getMaBN());
                for (HoaDon hd : list) {
                    Object[] row = {
                        hd.getMaHD(),
                        benhNhanDAO.selectByID(hd.getMaBN()).getHoTen(),
                        DateHelper.toString(hd.getNgayThanhToan()),
                        hd.getThoiGian(),
                        DateHelper.toString(hd.getNgayBDTT()),
                        DateHelper.toString(hd.getNgayKTTT()),
                        hd.getTongTien()
                    };
                    model.addRow(row);
                }
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
                System.out.println(e);
            }
        } else if (ShareHelper.isLogin1()) {
            try {
                list = hoaDonDAO.selectByMaBN(ShareHelper.nguoidung.getMabn());
                for (HoaDon hd : list) {
                    Object[] row = {
                        hd.getMaHD(),
                        benhNhanDAO.selectByID(hd.getMaBN()).getHoTen(),
                        DateHelper.toString(hd.getNgayThanhToan()),
                        hd.getThoiGian(),
                        DateHelper.toString(hd.getNgayBDTT()),
                        DateHelper.toString(hd.getNgayKTTT()),
                        hd.getTongTien()
                    };
                    model.addRow(row);
                }
            } catch (Exception e) {
                DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
                System.out.println(e);
            }
        }

    }

    public void fillNgayBD() {
        if (tblHoaDon.getRowCount() != 0) {
            if (!txtSoThangTT.getText().isEmpty()) {
                String ngayBD = (String) tblHoaDon.getValueAt(tblHoaDon.getRowCount() - 1, 5);
                lblNgayBatDau.setText(ngayBD);
            }
        } else {
            BenhNhan bn = (BenhNhan) cboTenBN.getSelectedItem();
            lblNgayBatDau.setText(DateHelper.toString(bn.getNgayVT()));
        }
    }

    public void fillNgayKT() {
        if (!txtSoThangTT.getText().isEmpty()) {
            Date ngayBT = DateHelper.toDate(lblNgayBatDau.getText(), "dd/MM/yyyy");
            Date ngayKT = DateHelper.addMonths(ngayBT, Integer.parseInt(txtSoThangTT.getText()));
            lblNgayKetThuc.setText(DateHelper.toString(ngayKT));
        }
    }

    public void fillComboxTenBN() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenBN.getModel();
        model.removeAllElements();
        if (ShareHelper.isLogin()) {
            List<BenhNhan> list = benhNhanDAO.selectAll();
            for (BenhNhan bn : list) {
                model.addElement(bn);
            }
            fillTable();
            fillLblMaPhong();
            fillThangCanTT();
        } else {
            List<BenhNhan> list = benhNhanDAO.findlistById(ShareHelper.nguoidung.getMabn());
            for (BenhNhan bn : list) {
                model.addElement(bn);
            }
            fillTable();
            fillLblMaPhong();
            fillThangCanTT();
        }

    }

    public void fillLblMaPhong() {
        BenhNhan benhNhan = (BenhNhan) cboTenBN.getSelectedItem();
        lblMaPhong.setText(benhNhanDAO.selectByID(benhNhan.getMaBN()).getMaPhong());
    }

    public void fillThangCanTT() {

        BenhNhan benhNhan = (BenhNhan) cboTenBN.getSelectedItem();
        List<HoaDon> listHoaDon = hoaDonDAO.selectByMaBN(benhNhan.getMaBN());

        Date ngayHienTai = new Date();
        Date ngayVoTrai = benhNhan.getNgayVT();
        int soThangO = benhNhan.getThoiGianO();
        int soThangDaTT = 0;
        for (int i = 0; i < listHoaDon.size(); i++) {
            soThangDaTT += listHoaDon.get(i).getThoiGian();
        }
        int soThang = DateHelper.subtrDateToMonth(ngayHienTai, ngayVoTrai);
        int tongSoThang = soThang < soThangO ? soThang : soThangO;

        lblSoThangCanTT.setText(String.valueOf(tongSoThang - soThangDaTT));
    }

    public void fillTongTien() {
        if (!txtSoThangTT.getText().isEmpty()) {
            Date ngayBD = DateHelper.toDate(lblNgayBatDau.getText());
            Date ngayKT = DateHelper.toDate(lblNgayKetThuc.getText());
            BenhNhan benhNhan = (BenhNhan) cboTenBN.getSelectedItem();
            Phong phong = phongDAO.findById(benhNhan.getMaPhong());
            List<DichVuCT> listDV = dvctDAO.selectByMaBNAndNgayDK(benhNhan.getMaBN(), ngayBD, ngayKT);

            double tongTien = 0;
            int soThangTT = Integer.parseInt(txtSoThangTT.getText());

            tongTien += phong.getGia() * soThangTT;
            for (DichVuCT dichVu : listDV) {
                DichVu dv = dichVuDAO.selectByID(dichVu.getMaDV());
                tongTien += dv.getGia();
            }
            lblTongTien.setText(String.valueOf(tongTien));
        }
    }

    public void clearForm() {
        txtSoThangTT.setText("");
        lblNgayBatDau.setText("");
        lblNgayKetThuc.setText("");
        txtNgayThanhToan.setDate(new Date());
        lblTongTien.setText("");
        row = -1;
        this.updateStatus();
    }

    public void insert() {
        if (validateData()) {
            try {
                HoaDon hd = this.getForm();
                System.out.println(hd.getMaBN());
                hoaDonDAO.insert(hd);
//                Undo:
                index++;
                List<HoaDon> listHd = hoaDonDAO.selectAll();
                listUndo.add(listHd.get(listHd.size() - 1));
                listBrowser.add(1);
//                
                SelectBenhNhan();
                DialogHelper.alert(this, "Thêm hóa đơn thành công");
            } catch (Exception e) {
                DialogHelper.alert(this, "Thêm thất bại");
                System.out.println(e);
            }
        }
    }

    public void delete() {
        if (DialogHelper.confirm(this, "Bạn muốn xóa hóa đơn này ?")) {
            try {
                int maHD = (int) tblHoaDon.getValueAt(row, 0);

                index++;
                HoaDon hd = hoaDonDAO.selectByID(maHD);
                listUndo.add(hd);
                listBrowser.add(3);

                hoaDonDAO.delete(maHD);
                DialogHelper.alert(this, "Xóa thành công");
                row = -1;
                SelectBenhNhan();
            } catch (Exception e) {
                DialogHelper.alert(this, "Xóa thất bại");
            }
        }
    }

    public void setForm(HoaDon hd) {
        BenhNhan bn = benhNhanDAO.selectByID(hd.getMaBN());

        txtNgayThanhToan.setDate(hd.getNgayThanhToan());
        txtSoThangTT.setText(String.valueOf(hd.getThoiGian()));
        lblTongTien.setText(String.valueOf(hd.getTongTien()));
        lblNgayBatDau.setText(DateHelper.toString(hd.getNgayBDTT()));
        lblNgayKetThuc.setText(DateHelper.toString(hd.getNgayKTTT()));
    }

    public HoaDon getForm() {
        HoaDon hd = new HoaDon();
        BenhNhan bn = (BenhNhan) cboTenBN.getSelectedItem();
        hd.setMaBN(bn.getMaBN());
        if (ShareHelper.isLogin()) {
            hd.setMaNV(ShareHelper.user.getMaNV());
        } else {
            hd.setMaNV(ShareHelper.nguoidung.getMatn());
        }

        hd.setThoiGian(Integer.parseInt(txtSoThangTT.getText()));
        hd.setNgayBDTT(DateHelper.toDate(lblNgayBatDau.getText(), "dd/MM/yyyy"));
        hd.setNgayKTTT(DateHelper.toDate(lblNgayKetThuc.getText(), "dd/MM/yyyy"));
        hd.setNgayThanhToan(txtNgayThanhToan.getDate());
        hd.setTongTien(Double.parseDouble(lblTongTien.getText()));

        return hd;
    }

    public void edit() {
        row = tblHoaDon.getSelectedRow();
        int maHD = (int) tblHoaDon.getValueAt(this.row, 0);
        HoaDon hd = hoaDonDAO.selectByID(maHD);
        BenhNhan bn = benhNhanDAO.selectByID(hd.getMaBN());
        this.setForm(hd);
        this.updateStatus();
    }

    private boolean validateData() {
        return true;
    }

    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean frist = (this.row == 0);
        boolean last = (this.row == tblHoaDon.getRowCount() - 1);
        btnThemHD.setEnabled(!edit);
        btnXoaHD.setEnabled(edit);
        txtNgayThanhToan.setEnabled(!edit);
        txtSoThangTT.setEnabled(!edit);
    }

    public void SelectBenhNhan() {
        this.fillLblMaPhong();
        this.fillThangCanTT();
        this.fillTable();
        clearForm();
        updateStatus();
    }

    private void viewDichVuCT() {
        CardLayout cardLayout = (CardLayout) jPanel1.getLayout();
        cardLayout.next(jPanel1);
    }

    private boolean isInvalidSoTTT() {
        String soThangTT = txtSoThangTT.getText();
        String soThangCanTT = lblSoThangCanTT.getText();
        if (!soThangTT.isEmpty()) {
            try {
                Integer.parseInt(soThangTT);
                return true;
//                if (Integer.parseInt(soThangTT) <= Integer.parseInt(soThangCanTT)) {
//                    return true;
//                } else {
//                    DialogHelper.alert(this, "Số tháng thanh toán không được lớn hơn số tháng cần thanh toán");
//                    txtSoThangTT.setText("");
//                    return false;
//                }

            } catch (Exception e) {
                DialogHelper.alert(this, "Bạn cần nhập số cho ô số tháng thanh toán");
                txtSoThangTT.setText("");
                return false;
            }
        } else {
            return true;
        }
    }

    public void exportpdf() {

        HoaDon hd = this.getForm();
        BenhNhan bn = benhNhanDAO.selectByID(hd.getMaBN());
        Phong phong = phongDAO.findById(bn.getMaPhong());
        DichVuCT listDV = dvctDAO.selectByHD(bn.getMaBN(), hd.getNgayBDTT(), hd.getNgayKTTT());
        DichVu dv = dichVuDAO.selectByID(listDV.getMaDV());
        try {
            JFileChooser jfile = new JFileChooser();
            FileNameExtensionFilter f = new FileNameExtensionFilter("pdf", "pdf");
            jfile.setDialogTitle("Lưu file");
            jfile.setFileFilter(f);
            int anh = jfile.showSaveDialog(this);
            if (anh == JFileChooser.APPROVE_OPTION) {
                File file = jfile.getSelectedFile();
                Document doc = new Document();
                PdfWriter.getInstance(doc, new FileOutputStream(file.getPath() + ".pdf"));
                Font font = new Font(BaseFont.createFont("src\\viet\\vuArial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED));
                font.setColor(1, 3, 6);
                font.setSize(10);
                font.setStyle(Font.NORMAL);
                String text = "Họ tên bệnh nhân : " + bn.getHoTen() + "\n"
                        + "Mã phòng : " + bn.getMaPhong() + "\n"
                        + "Giá phòng : " + String.valueOf(phong.getGia() * hd.getThoiGian()) + "\n"
                        + "Số tháng thanh toán : " + String.valueOf(hd.getThoiGian()) + "\n";
                String ser = "Dịch vụ đã dùng : " + dv.getTenDV() + "\n"
                        + "Tiền : " + dv.getGia() + "\n";
                String sum = "Ngày bắt đầu: " + DateHelper.toString(hd.getNgayBDTT()) + "\n"
                        + "Ngày kết thúc: " + DateHelper.toString(hd.getNgayKTTT()) + "\n"
                        + "Tổng tiền : " + String.valueOf(hd.getTongTien());
                doc.open();
                Paragraph ps = new Paragraph(text, font);
                ps.setAlignment(Element.ALIGN_LEFT);
                Paragraph se = new Paragraph(ser, font);
                se.setAlignment(Element.ALIGN_CENTER);
                Paragraph su = new Paragraph(sum, font);

                su.setAlignment(Element.ALIGN_LEFT);
                doc.add(ps);
                doc.add(se);
                doc.add(su);
                doc.close();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi lưu file");
        }

    }

    private void setFormDVCT() {
        HoaDon hd = this.getForm();
        BenhNhan bn = benhNhanDAO.selectByID(hd.getMaBN());
        Phong phong = phongDAO.findById(bn.getMaPhong());
        DichVuCT listDV = dvctDAO.selectByHD(bn.getMaBN(), hd.getNgayBDTT(), hd.getNgayKTTT());
        DichVu dv = dichVuDAO.selectByID(listDV.getMaDV());
        lblTenBN.setText(bn.getHoTen());
        lblMaPhong2.setText(bn.getMaPhong());
        lblGiaPhong.setText(String.valueOf(phong.getGia() * hd.getThoiGian()));
        lblSoThangTT.setText(String.valueOf(hd.getThoiGian()));
        lblNgayBatDau2.setText(DateHelper.toString(hd.getNgayBDTT()));
        lblNgayKetThuc2.setText(DateHelper.toString(hd.getNgayKTTT()));
        lbltten.setText(dv.getTenDV());
        lblTongTien2.setText(String.valueOf(hd.getTongTien()));
    }

    private void fillTableDVCT() {
        HoaDon hd = this.getForm();
        BenhNhan bn = benhNhanDAO.selectByID(hd.getMaBN());
        DefaultTableModel model = (DefaultTableModel) tblDichVuCT.getModel();
        model.setRowCount(0);
        try {
            List<DichVuCT> listDV = dvctDAO.selectByMaBNAndNgayDK(bn.getMaBN(), hd.getNgayBDTT(), hd.getNgayKTTT());
            for (DichVuCT dichVuCT : listDV) {
                DichVu dv = dichVuDAO.selectByID(dichVuCT.getMaDV());
                Object[] row = {
                    dv.getMaDV(),
                    dv.getTenDV(),
                    DateHelper.toString(dichVuCT.getNgayDK()),
                    dv.getGia()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            DialogHelper.alert(this, "Lỗi truy vấn dữ liệu");
            System.out.println(e);
        }
    }

    private void showMenuRedo() {
        jPopupMenu1.show(lblMenuRedo, -40, 30);
    }

    private void undo() {
        HoaDon hd = listUndo.get(index);
        if (listBrowser.get(index) == 1) {
            hoaDonDAO.delete(hd.getMaHD());
        } else if (listBrowser.get(index) == 2) {
            hoaDonDAO.update(hd);
        } else if (listBrowser.get(index) == 3) {
            hoaDonDAO.insert(hd);
        }
        fillTable();
    }
}
